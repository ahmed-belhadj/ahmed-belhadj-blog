{"expireTime":9007200796700561000,"key":"transformer-remark-markdown-ast-773a8248435012cbc30bc41cb8a8f563-gatsby-remark-external-linksgatsby-remark-prismjsgatsby-remark-autolink-headers-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"link","url":"#accomplishments","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Accomplishments","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":18,"offset":18},"indent":[]},"data":{"id":"accomplishments","htmlAttributes":{"id":"accomplishments"},"hProperties":{"id":"accomplishments"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/graphs/contributors?from=2018-11-04&to=2018-11-10&type=c","children":[{"type":"text","value":"Click here for this week's contribution graph!","position":{"start":{"line":4,"column":4,"offset":23},"end":{"line":4,"column":50,"offset":69},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":164,"offset":183},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":166,"offset":185},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":166,"offset":185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Provide a paragraph (5-8 sentences) summarizing the work you did this week, the challenges you faced, the tools you used, and your accomplishments","position":{"start":{"line":6,"column":1,"offset":187},"end":{"line":6,"column":147,"offset":333},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":187},"end":{"line":6,"column":147,"offset":333},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This week, our team selected and implemented our tech stack for JobMatcher:","position":{"start":{"line":8,"column":1,"offset":335},"end":{"line":8,"column":76,"offset":410},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":335},"end":{"line":8,"column":76,"offset":410},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Application and Data","position":{"start":{"line":10,"column":3,"offset":414},"end":{"line":10,"column":23,"offset":434},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":414},"end":{"line":10,"column":23,"offset":434},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Libraries","position":{"start":{"line":12,"column":5,"offset":440},"end":{"line":12,"column":14,"offset":449},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":440},"end":{"line":12,"column":14,"offset":449},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Javascript UI Library → ","position":{"start":{"line":14,"column":11,"offset":461},"end":{"line":14,"column":35,"offset":485},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"React","position":{"start":{"line":14,"column":37,"offset":487},"end":{"line":14,"column":42,"offset":492},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":485},"end":{"line":14,"column":44,"offset":494},"indent":[]}}],"position":{"start":{"line":14,"column":11,"offset":461},"end":{"line":14,"column":44,"offset":494},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":459},"end":{"line":15,"column":1,"offset":495},"indent":[1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Javascript Framework Components → ","position":{"start":{"line":16,"column":11,"offset":506},"end":{"line":16,"column":45,"offset":540},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"styled-components, reactstrap","position":{"start":{"line":16,"column":47,"offset":542},"end":{"line":16,"column":76,"offset":571},"indent":[]}}],"position":{"start":{"line":16,"column":45,"offset":540},"end":{"line":16,"column":78,"offset":573},"indent":[]}}],"position":{"start":{"line":16,"column":11,"offset":506},"end":{"line":16,"column":78,"offset":573},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":504},"end":{"line":17,"column":1,"offset":574},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"State Management Library → ","position":{"start":{"line":18,"column":11,"offset":585},"end":{"line":18,"column":38,"offset":612},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Redux.js","position":{"start":{"line":18,"column":40,"offset":614},"end":{"line":18,"column":48,"offset":622},"indent":[]}}],"position":{"start":{"line":18,"column":38,"offset":612},"end":{"line":18,"column":50,"offset":624},"indent":[]}}],"position":{"start":{"line":18,"column":11,"offset":585},"end":{"line":18,"column":50,"offset":624},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":583},"end":{"line":18,"column":50,"offset":624},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":459},"end":{"line":18,"column":50,"offset":624},"indent":[1,9,1,9]}}],"position":{"start":{"line":12,"column":3,"offset":438},"end":{"line":19,"column":1,"offset":625},"indent":[1,5,1,5,1,5,1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Frameworks","position":{"start":{"line":20,"column":5,"offset":630},"end":{"line":20,"column":15,"offset":640},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":630},"end":{"line":20,"column":15,"offset":640},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":true,"children":[{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Front-End Framework - Bootstrap","position":{"start":{"line":22,"column":11,"offset":652},"end":{"line":22,"column":42,"offset":683},"indent":[]}}],"position":{"start":{"line":22,"column":11,"offset":652},"end":{"line":22,"column":42,"offset":683},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":650},"end":{"line":23,"column":1,"offset":684},"indent":[1]}},{"type":"listItem","loose":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Full Stack Framework - Django","position":{"start":{"line":24,"column":11,"offset":695},"end":{"line":24,"column":40,"offset":724},"indent":[]}}],"position":{"start":{"line":24,"column":11,"offset":695},"end":{"line":24,"column":40,"offset":724},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"backend","position":{"start":{"line":26,"column":15,"offset":740},"end":{"line":26,"column":22,"offset":747},"indent":[]}}],"position":{"start":{"line":26,"column":15,"offset":740},"end":{"line":26,"column":22,"offset":747},"indent":[]}}],"position":{"start":{"line":26,"column":13,"offset":738},"end":{"line":26,"column":22,"offset":747},"indent":[]}}],"position":{"start":{"line":26,"column":13,"offset":738},"end":{"line":26,"column":22,"offset":747},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":693},"end":{"line":26,"column":22,"offset":747},"indent":[1,9]}}],"position":{"start":{"line":22,"column":9,"offset":650},"end":{"line":26,"column":22,"offset":747},"indent":[1,9,1,9]}}],"position":{"start":{"line":20,"column":3,"offset":628},"end":{"line":26,"column":22,"offset":747},"indent":[1,5,1,5,1,5]}}],"position":{"start":{"line":12,"column":3,"offset":438},"end":{"line":26,"column":22,"offset":747},"indent":[1,5,1,5,1,5,1,3,1,5,1,5,1,5]}}],"position":{"start":{"line":10,"column":1,"offset":412},"end":{"line":26,"column":22,"offset":747},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":412},"end":{"line":26,"column":22,"offset":747},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"we set up continuous deployment of our client and server, with functional user accounts","position":{"start":{"line":28,"column":1,"offset":749},"end":{"line":28,"column":88,"offset":836},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":749},"end":{"line":28,"column":88,"offset":836},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#tasks-pulled","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Tasks Pulled","position":{"start":{"line":30,"column":3,"offset":840},"end":{"line":30,"column":15,"offset":852},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":838},"end":{"line":30,"column":15,"offset":852},"indent":[]},"data":{"id":"tasks-pulled","htmlAttributes":{"id":"tasks-pulled"},"hProperties":{"id":"tasks-pulled"}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#client","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Client","position":{"start":{"line":32,"column":4,"offset":857},"end":{"line":32,"column":10,"offset":863},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":854},"end":{"line":32,"column":10,"offset":863},"indent":[]},"data":{"id":"client","htmlAttributes":{"id":"client"},"hProperties":{"id":"client"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#create-react-app","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Create React App","position":{"start":{"line":34,"column":5,"offset":869},"end":{"line":34,"column":21,"offset":885},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":865},"end":{"line":34,"column":21,"offset":885},"indent":[]},"data":{"id":"create-react-app","htmlAttributes":{"id":"create-react-app"},"hProperties":{"id":"create-react-app"}}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/pull/2","children":[{"type":"text","value":"GitHub","position":{"start":{"line":36,"column":6,"offset":892},"end":{"line":36,"column":12,"offset":898},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":891},"end":{"line":36,"column":76,"offset":962},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":36,"column":3,"offset":889},"end":{"line":36,"column":78,"offset":964},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":889},"end":{"line":36,"column":78,"offset":964},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":887},"end":{"line":36,"column":78,"offset":964},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://trello.com/c/zJ4rOrR5/11-frontend-via-cra","children":[{"type":"text","value":"Trello","position":{"start":{"line":37,"column":6,"offset":970},"end":{"line":37,"column":12,"offset":976},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":969},"end":{"line":37,"column":64,"offset":1028},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":37,"column":3,"offset":967},"end":{"line":37,"column":66,"offset":1030},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":967},"end":{"line":37,"column":66,"offset":1030},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":965},"end":{"line":37,"column":66,"offset":1030},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":887},"end":{"line":37,"column":66,"offset":1030},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#netlify-redirects","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Netlify redirects","position":{"start":{"line":39,"column":5,"offset":1036},"end":{"line":39,"column":22,"offset":1053},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1032},"end":{"line":39,"column":22,"offset":1053},"indent":[]},"data":{"id":"netlify-redirects","htmlAttributes":{"id":"netlify-redirects"},"hProperties":{"id":"netlify-redirects"}}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/pull/21","children":[{"type":"text","value":"GitHub","position":{"start":{"line":41,"column":6,"offset":1060},"end":{"line":41,"column":12,"offset":1066},"indent":[]}}],"position":{"start":{"line":41,"column":5,"offset":1059},"end":{"line":41,"column":77,"offset":1131},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":41,"column":3,"offset":1057},"end":{"line":41,"column":79,"offset":1133},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":1057},"end":{"line":41,"column":79,"offset":1133},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1055},"end":{"line":41,"column":79,"offset":1133},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://trello.com/c/L3Z0Gx7L/47-netlify-deploy-broken","children":[{"type":"text","value":"Trello","position":{"start":{"line":42,"column":6,"offset":1139},"end":{"line":42,"column":12,"offset":1145},"indent":[]}}],"position":{"start":{"line":42,"column":5,"offset":1138},"end":{"line":42,"column":69,"offset":1202},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":42,"column":3,"offset":1136},"end":{"line":42,"column":71,"offset":1204},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":1136},"end":{"line":42,"column":71,"offset":1204},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1134},"end":{"line":42,"column":71,"offset":1204},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1055},"end":{"line":42,"column":71,"offset":1204},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#signup-component","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"SignUp component","position":{"start":{"line":44,"column":5,"offset":1210},"end":{"line":44,"column":21,"offset":1226},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1206},"end":{"line":44,"column":21,"offset":1226},"indent":[]},"data":{"id":"signup-component","htmlAttributes":{"id":"signup-component"},"hProperties":{"id":"signup-component"}}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/pull/13","children":[{"type":"text","value":"GitHub","position":{"start":{"line":46,"column":6,"offset":1233},"end":{"line":46,"column":12,"offset":1239},"indent":[]}}],"position":{"start":{"line":46,"column":5,"offset":1232},"end":{"line":46,"column":77,"offset":1304},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":46,"column":3,"offset":1230},"end":{"line":46,"column":79,"offset":1306},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":1230},"end":{"line":46,"column":79,"offset":1306},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1228},"end":{"line":46,"column":79,"offset":1306},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://trello.com/c/qDmpDhw5/1-create-user-accounts","children":[{"type":"text","value":"Trello","position":{"start":{"line":47,"column":6,"offset":1312},"end":{"line":47,"column":12,"offset":1318},"indent":[]}}],"position":{"start":{"line":47,"column":5,"offset":1311},"end":{"line":47,"column":67,"offset":1373},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":47,"column":3,"offset":1309},"end":{"line":47,"column":69,"offset":1375},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1309},"end":{"line":47,"column":69,"offset":1375},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1307},"end":{"line":47,"column":69,"offset":1375},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1228},"end":{"line":47,"column":69,"offset":1375},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#server","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Server","position":{"start":{"line":49,"column":4,"offset":1380},"end":{"line":49,"column":10,"offset":1386},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1377},"end":{"line":49,"column":10,"offset":1386},"indent":[]},"data":{"id":"server","htmlAttributes":{"id":"server"},"hProperties":{"id":"server"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#travis-ci","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Travis CI","position":{"start":{"line":51,"column":5,"offset":1392},"end":{"line":51,"column":14,"offset":1401},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1388},"end":{"line":51,"column":14,"offset":1401},"indent":[]},"data":{"id":"travis-ci","htmlAttributes":{"id":"travis-ci"},"hProperties":{"id":"travis-ci"}}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/pull/7","children":[{"type":"text","value":"GitHub","position":{"start":{"line":53,"column":6,"offset":1408},"end":{"line":53,"column":12,"offset":1414},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":1407},"end":{"line":53,"column":76,"offset":1478},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":53,"column":3,"offset":1405},"end":{"line":53,"column":78,"offset":1480},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1405},"end":{"line":53,"column":78,"offset":1480},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1403},"end":{"line":53,"column":78,"offset":1480},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://trello.com/c/AzspvWTu/6-add-a-ci","children":[{"type":"text","value":"Trello","position":{"start":{"line":54,"column":6,"offset":1486},"end":{"line":54,"column":12,"offset":1492},"indent":[]}}],"position":{"start":{"line":54,"column":5,"offset":1485},"end":{"line":54,"column":55,"offset":1535},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":54,"column":3,"offset":1483},"end":{"line":54,"column":57,"offset":1537},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1483},"end":{"line":54,"column":57,"offset":1537},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1481},"end":{"line":54,"column":57,"offset":1537},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1403},"end":{"line":54,"column":57,"offset":1537},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#jwt-authentication","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"JWT Authentication","position":{"start":{"line":56,"column":5,"offset":1543},"end":{"line":56,"column":23,"offset":1561},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1539},"end":{"line":56,"column":23,"offset":1561},"indent":[]},"data":{"id":"jwt-authentication","htmlAttributes":{"id":"jwt-authentication"},"hProperties":{"id":"jwt-authentication"}}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://github.com/Lambda-School-Labs/Labs8-JobMatcher/pull/17","children":[{"type":"text","value":"GitHub","position":{"start":{"line":58,"column":6,"offset":1568},"end":{"line":58,"column":12,"offset":1574},"indent":[]}}],"position":{"start":{"line":58,"column":5,"offset":1567},"end":{"line":58,"column":77,"offset":1639},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":58,"column":3,"offset":1565},"end":{"line":58,"column":79,"offset":1641},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1565},"end":{"line":58,"column":79,"offset":1641},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1563},"end":{"line":58,"column":79,"offset":1641},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"link","title":null,"url":"https://trello.com/c/qDmpDhw5/1-create-user-accounts","children":[{"type":"text","value":"Trello","position":{"start":{"line":59,"column":6,"offset":1647},"end":{"line":59,"column":12,"offset":1653},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":1646},"end":{"line":59,"column":67,"offset":1708},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":59,"column":3,"offset":1644},"end":{"line":59,"column":69,"offset":1710},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":1644},"end":{"line":59,"column":69,"offset":1710},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1642},"end":{"line":59,"column":69,"offset":1710},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1563},"end":{"line":59,"column":69,"offset":1710},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#detailed-analysis","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Detailed Analysis","position":{"start":{"line":61,"column":3,"offset":1714},"end":{"line":61,"column":20,"offset":1731},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1712},"end":{"line":61,"column":20,"offset":1731},"indent":[]},"data":{"id":"detailed-analysis","htmlAttributes":{"id":"detailed-analysis"},"hProperties":{"id":"detailed-analysis"}}},{"type":"paragraph","children":[{"type":"text","value":"Pick one of your tickets and provide a detailed analysis of the work you did. This should be approximately ¼ page of text, and at least three screenshots.","position":{"start":{"line":63,"column":1,"offset":1733},"end":{"line":63,"column":155,"offset":1887},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1733},"end":{"line":63,"column":155,"offset":1887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's take a deeper dive into JWT Authentication with Django. Now we’re going to need to install some packages, including Django, Django REST framework (hereafter referred to as the DRF), Django REST framework JWT, and Django CORS headers. The DRF is what we’ll be layering on top of Django to turn our project into an API, while Django REST framework JWT gives us the ability to use JWT tokens for our app, and Django CORS headers is necessary to avoid CORS issues:","position":{"start":{"line":65,"column":1,"offset":1889},"end":{"line":65,"column":467,"offset":2355},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1889},"end":{"line":65,"column":467,"offset":2355},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pipenv install djangorestframework\npipenv install djangorestframework-jwt\npipenv install django-cors-headers</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2357},"end":{"line":71,"column":4,"offset":2473},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we need to adjust some of our project’s settings. Go into settings.py and make the following modifications:","position":{"start":{"line":73,"column":1,"offset":2475},"end":{"line":73,"column":112,"offset":2586},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2475},"end":{"line":73,"column":112,"offset":2586},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\"># ...</span>\n        <span class=\"token string\">'rest_framework'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'corsheaders'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n\n    MIDDLEWARE <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\"># ...</span>\n        <span class=\"token string\">'corsheaders.middleware.CorsMiddleware'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># Note that this needs to be placed above CommonMiddleware</span>\n        <span class=\"token string\">'django.middleware.common.CommonMiddleware'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># This should already exist</span>\n        <span class=\"token comment\"># ...</span>\n    <span class=\"token punctuation\">]</span>\n\n    REST_FRAMEWORK <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'DEFAULT_PERMISSION_CLASSES'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'rest_framework.permissions.IsAuthenticated'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'DEFAULT_AUTHENTICATION_CLASSES'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'rest_framework.authentication.SessionAuthentication'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'rest_framework.authentication.BasicAuthentication'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    CORS_ORIGIN_WHITELIST <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'localhost:3000'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":75,"column":1,"offset":2588},"end":{"line":103,"column":4,"offset":3401},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s examine what we’ve done here: first, we’ve registered the DRF and CORS headers packages with our project by adding them to ","position":{"start":{"line":105,"column":1,"offset":3403},"end":{"line":105,"column":130,"offset":3532},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">INSTALLED_APPS</code>","position":{"start":{"line":105,"column":130,"offset":3532},"end":{"line":105,"column":146,"offset":3548},"indent":[]}},{"type":"text","value":". Then, we added a piece of custom CORS middleware, making sure to place it place it above any middleware that generates responses such as Django’s CommonMiddleware. We then customized some of the default settings for the DRF: first, we set the DEFAULT","position":{"start":{"line":105,"column":146,"offset":3548},"end":{"line":105,"column":398,"offset":3800},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"PERMISSION","position":{"start":{"line":105,"column":399,"offset":3801},"end":{"line":105,"column":409,"offset":3811},"indent":[]}}],"position":{"start":{"line":105,"column":398,"offset":3800},"end":{"line":105,"column":410,"offset":3812},"indent":[]}},{"type":"text","value":"CLASSES, which in this case will require a request to be authenticated before it is processed unless specified otherwise. Then, we set the DEFAULT","position":{"start":{"line":105,"column":410,"offset":3812},"end":{"line":105,"column":556,"offset":3958},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"AUTHENTICATION","position":{"start":{"line":105,"column":557,"offset":3959},"end":{"line":105,"column":571,"offset":3973},"indent":[]}}],"position":{"start":{"line":105,"column":556,"offset":3958},"end":{"line":105,"column":572,"offset":3974},"indent":[]}},{"type":"text","value":"CLASSES, which determines which authentication methods the server will try when it receives a request, in descending order. Finally, we added localhost:3000 to the CORS","position":{"start":{"line":105,"column":572,"offset":3974},"end":{"line":105,"column":740,"offset":4142},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"ORIGIN","position":{"start":{"line":105,"column":741,"offset":4143},"end":{"line":105,"column":747,"offset":4149},"indent":[]}}],"position":{"start":{"line":105,"column":740,"offset":4142},"end":{"line":105,"column":748,"offset":4150},"indent":[]}},{"type":"text","value":"WHITELIST, since that’s where the requests from our React app will be coming from.","position":{"start":{"line":105,"column":748,"offset":4150},"end":{"line":105,"column":830,"offset":4232},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3403},"end":{"line":105,"column":830,"offset":4232},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The DRF JWT package provides us with a default view for decoding received JWTs. We can add that to urls.py:","position":{"start":{"line":107,"column":1,"offset":4234},"end":{"line":107,"column":108,"offset":4341},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4234},"end":{"line":107,"column":108,"offset":4341},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> obtain_jwt_token\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">#...</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'token-auth/'</span><span class=\"token punctuation\">,</span> obtain_jwt_token<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":109,"column":1,"offset":4343},"end":{"line":116,"column":4,"offset":4480},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and navigate to ","position":{"start":{"line":118,"column":1,"offset":4482},"end":{"line":118,"column":17,"offset":4498},"indent":[]}},{"type":"link","title":null,"url":"http://localhost:8000/token-auth/","children":[{"type":"text","value":"http://localhost:8000/token-auth/","position":{"start":{"line":118,"column":17,"offset":4498},"end":{"line":118,"column":50,"offset":4531},"indent":[]}}],"position":{"start":{"line":118,"column":17,"offset":4498},"end":{"line":118,"column":50,"offset":4531},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":", you should see an html form there with username and password fields (this is a convenience provided by the DRF… isn’t it awesome?). Fill in these fields and you should see the JWT itself displayed right there on the page.","position":{"start":{"line":118,"column":50,"offset":4531},"end":{"line":118,"column":273,"offset":4754},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":4482},"end":{"line":118,"column":273,"offset":4754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I’m calling the app “core”, but you can of course call it whatever you want. Before we do anything else, let’s register the app in settings.py:","position":{"start":{"line":120,"column":1,"offset":4756},"end":{"line":120,"column":144,"offset":4899},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4756},"end":{"line":120,"column":144,"offset":4899},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token string\">'my-app.apps.CoreConfig'</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":122,"column":1,"offset":4901},"end":{"line":127,"column":4,"offset":4974},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we need to take a few steps that might seem circuitous at first but which I promise will make sense by the end. First, we need to create a couple serializers for our User model. These serializers will be responsible for serializing/unserializing the User model into and out of various formats, primarily JSON in our case. Go ahead and create a new core/serializers.py file, and fill it with the following:","position":{"start":{"line":129,"column":1,"offset":4976},"end":{"line":129,"column":410,"offset":5385},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4976},"end":{"line":129,"column":410,"offset":5385},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers\n<span class=\"token keyword\">from</span> rest_framework_jwt<span class=\"token punctuation\">.</span>settings <span class=\"token keyword\">import</span> api_settings\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> User\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> User\n        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserSerializerWithToken</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    token <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>SerializerMethodField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> serializers<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>write_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        jwt_payload_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_PAYLOAD_HANDLER\n        jwt_encode_handler <span class=\"token operator\">=</span> api_settings<span class=\"token punctuation\">.</span>JWT_ENCODE_HANDLER\n\n        payload <span class=\"token operator\">=</span> jwt_payload_handler<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n        token <span class=\"token operator\">=</span> jwt_encode_handler<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> token\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        password <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n        instance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>Meta<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>validated_data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> password <span class=\"token keyword\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            instance<span class=\"token punctuation\">.</span>set_password<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span>\n        instance<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> instance\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> User\n        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":131,"column":1,"offset":5387},"end":{"line":168,"column":4,"offset":6449},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The reason we’re making two different serializers for the model is because we’ll be using the UserSerializerWithToken for handling signups. When a user signs up, we want the response from the server to include both their relevant user data (in this case, just the username), as well as the token, which will be stored in the browser for further authentication. But we don’t need the token every time we request a user’s data — just when signing up. Thus, separate serializers.","position":{"start":{"line":170,"column":1,"offset":6451},"end":{"line":170,"column":477,"offset":6927},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":6451},"end":{"line":170,"column":477,"offset":6927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"That’s the ‘why’, but let’s take a closer look at the code for the ‘how’. Both serializers inherit from rest_framework.serializers.ModelSerializer, which provides us with a handy shortcut for customizing the serializers according to the model data they’ll be working with (otherwise we’d need to spell out every field by hand). In the internal Meta class, we indicate which model each serializer will be representing, and which fields from that model we want the serializer to include.","position":{"start":{"line":172,"column":1,"offset":6929},"end":{"line":172,"column":486,"offset":7414},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":6929},"end":{"line":172,"column":486,"offset":7414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But the User class doesn’t have an internal ‘token’ field, so for that we do need to define our own custom field. We define the token variable to be a custom method, then add a get_token() method which handles the manual creation of a new token. It does this using the default settings for payload and encoding handling provided by the JWT package (the payload is the data being tokenized, in this case the user). Finally, we added the custom ‘token’ field to the fields variable in our Meta internal class.","position":{"start":{"line":174,"column":1,"offset":7416},"end":{"line":174,"column":508,"offset":7923},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":7416},"end":{"line":174,"column":508,"offset":7923},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We also need to make sure the serializer recognizes and stores the submitted password, but doesn’t include it in the returned JSON. So we add the ‘password’ field to fields, but above that also specify that the password should be write only. Then, we override the serializer’s create() method, which determines how the object being serialized gets saved to the database. We do this primarily so that we can call the set_password() method on the user instance, which is how the password gets properly hashed.","position":{"start":{"line":176,"column":1,"offset":7925},"end":{"line":176,"column":508,"offset":8432},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":7925},"end":{"line":176,"column":508,"offset":8432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now we’re ready to start configuring our views in core/views.py. There are many ways of going about doing this (function-based views, class-based views, or viewsets). Since viewsets can be confusing if you don’t understand what’s happening internally (and since we don’t have enough views here to reap their benefits anyway), I’ll use the other forms of views here:","position":{"start":{"line":178,"column":1,"offset":8434},"end":{"line":178,"column":366,"offset":8799},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":8434},"end":{"line":178,"column":366,"offset":8799},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponseRedirect\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> User\n<span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> permissions<span class=\"token punctuation\">,</span> status\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> api_view\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> APIView\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> UserSerializer<span class=\"token punctuation\">,</span> UserSerializerWithToken\n\n\n@api_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">current_user</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Determine the current user by their token, and return their data\n    \"\"\"</span>\n\n    serializer <span class=\"token operator\">=</span> UserSerializer<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UserList</span><span class=\"token punctuation\">(</span>APIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Create a new user. It's called 'UserList' because normally we'd have a get\n    method here too, for retrieving a list of all User objects.\n    \"\"\"</span>\n\n    permission_classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>permissions<span class=\"token punctuation\">.</span>AllowAny<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        serializer <span class=\"token operator\">=</span> UserSerializerWithToken<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> serializer<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            serializer<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_201_CREATED<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_400_BAD_REQUEST<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":180,"column":1,"offset":8801},"end":{"line":214,"column":4,"offset":9928},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s walk through this. First, we have the current","position":{"start":{"line":216,"column":1,"offset":9930},"end":{"line":216,"column":52,"offset":9981},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"user function-based view. This view will be used anytime the user revisits the site, reloads the page, or does anything else that causes React to forget its state. React will check if the user has a token stored in the browser, and if a token is found, it’ll make a request to this view. Since we’ve set things up properly, the token will be parsed automatically to check for authentication, and if validated we’ll receive the user object associated with that token in the request’s user property. We can then serialize the user object, and return the data from the serializer in the response. This whole function then serves as the input for the @api","position":{"start":{"line":216,"column":53,"offset":9982},"end":{"line":216,"column":704,"offset":10633},"indent":[]}}],"position":{"start":{"line":216,"column":52,"offset":9981},"end":{"line":216,"column":705,"offset":10634},"indent":[]}},{"type":"text","value":"view decorator, which specifies the request methods this view will respond to (in this case, just GET requests).","position":{"start":{"line":216,"column":705,"offset":10634},"end":{"line":216,"column":817,"offset":10746},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":9930},"end":{"line":216,"column":817,"offset":10746},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Next, we have our class-based UserList view. When a request is routed to this view, a UserSerializerWithToken serializer object is instantiated with the data the user entered into the signup form. The serializer checks whether or not the data is valid, and if it is, it’ll save the new user and return that user’s data in the response (including the token, since we’re using this particular serializer). Note that we specify the permissions for this class to be permissions.AllowAny, because otherwise, the user would have to be logged in before they could sign up, which could be frustrating.","position":{"start":{"line":218,"column":1,"offset":10748},"end":{"line":218,"column":594,"offset":11341},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":10748},"end":{"line":218,"column":594,"offset":11341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We have our views now, but as of yet still no way of accessing them. To do that, we need to assign them some routes. It’s customary to give each app its own route configuration, so create a new core/urls.py file and edit it like so:","position":{"start":{"line":220,"column":1,"offset":11343},"end":{"line":220,"column":233,"offset":11575},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":11343},"end":{"line":220,"column":233,"offset":11575},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> current_user<span class=\"token punctuation\">,</span> UserList\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'current_user/'</span><span class=\"token punctuation\">,</span> current_user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'users/'</span><span class=\"token punctuation\">,</span> UserList<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":222,"column":1,"offset":11577},"end":{"line":230,"column":4,"offset":11760},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we’ll hook up this file to the root urls conf by editing that file (mysite/urls.py):","position":{"start":{"line":232,"column":1,"offset":11762},"end":{"line":232,"column":89,"offset":11850},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":11762},"end":{"line":232,"column":89,"offset":11850},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#...</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path<span class=\"token punctuation\">,</span> include\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">#...</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'core/'</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">'core.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":234,"column":1,"offset":11852},"end":{"line":242,"column":4,"offset":11976},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With that, we’re almost good to go — but we still have a problem. Currently, when a user logs in, they receive their token but not any of their user data. To remedy this, we could make a separate request to the current_user() view we defined earlier… but that’s annoying. Why make multiple requests? Instead, let’s customize our JWT settings a bit.","position":{"start":{"line":244,"column":1,"offset":11978},"end":{"line":244,"column":349,"offset":12326},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":11978},"end":{"line":244,"column":349,"offset":12326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What we’re going to need to do is define a custom JWT response payload handler which includes the user’s serialized data. Within the mysite directory, make a new file called utils.py and fill it with the following:","position":{"start":{"line":246,"column":1,"offset":12328},"end":{"line":246,"column":215,"offset":12542},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":12328},"end":{"line":246,"column":215,"offset":12542},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> core<span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> UserSerializer\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">my_jwt_response_handler</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> request<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'token'</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'user'</span><span class=\"token punctuation\">:</span> UserSerializer<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> context<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">:</span> request<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":248,"column":1,"offset":12544},"end":{"line":257,"column":4,"offset":12779},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All this is doing is adding a new ‘user’ field with the user’s serialized data when a token is generated. This is going to be our new default JWT response handler, which we can set up by adding a little bit to our settings.py file:","position":{"start":{"line":259,"column":1,"offset":12781},"end":{"line":259,"column":232,"offset":13012},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":12781},"end":{"line":259,"column":232,"offset":13012},"indent":[]}},{"type":"html","lang":"python","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">JWT_AUTH <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'JWT_RESPONSE_PAYLOAD_HANDLER'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'mysite.utils.my_jwt_response_handler'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":261,"column":1,"offset":13014},"end":{"line":265,"column":4,"offset":13117},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, when a user logs in, they’ll get all their user data along with their token... And we should finally be done! On to the frontend.","position":{"start":{"line":267,"column":1,"offset":13119},"end":{"line":267,"column":135,"offset":13253},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":13119},"end":{"line":267,"column":135,"offset":13253},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#milestone-reflections","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Milestone Reflections","position":{"start":{"line":269,"column":3,"offset":13257},"end":{"line":269,"column":24,"offset":13278},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":13255},"end":{"line":269,"column":24,"offset":13278},"indent":[]},"data":{"id":"milestone-reflections","htmlAttributes":{"id":"milestone-reflections"},"hProperties":{"id":"milestone-reflections"}}},{"type":"paragraph","children":[{"type":"text","value":"As a part of your journal entry, write ¼ to ½ a page reflecting on your experiences forming a team. What did you do to help the team solidify as a group? What did you do that you now realize caused friction in this process?","position":{"start":{"line":271,"column":1,"offset":13280},"end":{"line":271,"column":224,"offset":13503},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":13280},"end":{"line":271,"column":224,"offset":13503},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To help solidify the team as a group we rallied around getting the MVP done in time to be able to learn more. Although this has been frictionless","position":{"start":{"line":273,"column":1,"offset":13505},"end":{"line":273,"column":146,"offset":13650},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":13505},"end":{"line":273,"column":146,"offset":13650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As a group, provide links to evidence that:","position":{"start":{"line":275,"column":1,"offset":13652},"end":{"line":275,"column":44,"offset":13695},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":13652},"end":{"line":275,"column":44,"offset":13695},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Front end is deployed with a recognizable name. The site can be visited and will load a simple message","position":{"start":{"line":277,"column":1,"offset":13697},"end":{"line":277,"column":103,"offset":13799},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":13697},"end":{"line":277,"column":103,"offset":13799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"jobmatcher.netlify.com","position":{"start":{"line":279,"column":1,"offset":13801},"end":{"line":279,"column":23,"offset":13823},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":13801},"end":{"line":279,"column":23,"offset":13823},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Back end is deployed with a recognizable name. The address can be visited and will return data","position":{"start":{"line":281,"column":1,"offset":13825},"end":{"line":281,"column":95,"offset":13919},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":13825},"end":{"line":281,"column":95,"offset":13919},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://django-deploy-heroku-backend.herokuapp.com/api/v1/","children":[{"type":"text","value":"https://django-deploy-heroku-backend.herokuapp.com/api/v1/","position":{"start":{"line":283,"column":1,"offset":13921},"end":{"line":283,"column":59,"offset":13979},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":13921},"end":{"line":283,"column":59,"offset":13979},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":283,"column":1,"offset":13921},"end":{"line":283,"column":59,"offset":13979},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"User accounts are created: Either through a tool, or the front end, a user account can be created and signed in.","position":{"start":{"line":285,"column":1,"offset":13981},"end":{"line":285,"column":113,"offset":14093},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":13981},"end":{"line":285,"column":113,"offset":14093},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":287,"column":1,"offset":14095},"end":{"line":287,"column":4,"offset":14098},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":288,"column":1,"offset":14099}}}}